---
import { getCollection } from "astro:content";

import PageLayout from "@layouts/PageLayout.astro";
import TopLayout from "@layouts/TopLayout.astro";
import BottomLayout from "@layouts/BottomLayout.astro";

import { WORK } from "@consts";
import Container from "@components/Container.astro";

const collection = await getCollection("work");
collection.sort(
  (a, b) =>
    new Date(b.data.dateStart).getTime() - new Date(a.data.dateStart).getTime()
);

const jobs = await Promise.all(
  collection.map(async (job) => {
    const { Content } = await job.render();
    return { ...job, Content };
  })
);

const formatJobDate = (input: Date | string) => {
  if (typeof input === "string") return input;

  const month = input.toLocaleDateString("en-US", {
    month: "short",
  });

  const year = new Date(input).getFullYear();
  return `${month} ${year}`;
};
---

<PageLayout title={WORK.TITLE} description={WORK.DESCRIPTION}>
  <div class="pb-5">
    <Container size="md">
      <h1 class="animate page-heading">{WORK.TITLE}</h1>
      <p>
        Places where they wanted to exchange money for code, so I can exchange
        money for goods and services.
      </p>
    </Container>
  </div>
  <BottomLayout>
    <ul>
      {
        jobs.map((job) => (
          <li class="animate mt-4 border-b border-black/10 py-8 first-of-type:pt-0 first-of-type:pt-0 last-of-type:border-none dark:border-white/25">
            <div class="flex content-between content-stretch">
              <div class="mb-4 text-sm uppercase">
                {`üìÖ`}
                {formatJobDate(job.data.dateStart)} -{" "}
                {job.data.dateEnd ? formatJobDate(job.data.dateEnd) : "Present"}
              </div>
              <div class="ml-auto mb-4 text-sm uppercase">
                {`üìç`}
                {job.data.place}
              </div>
            </div>
            <div class="font-semibold text-black dark:text-white">
              {job.data.company}
            </div>
            <div class="text-sm font-semibold">{job.data.role}</div>
            <article class="object-contain text-justify dark:prose-invert">
              <job.Content />
            </article>
          </li>
        ))
      }
    </ul>
  </BottomLayout>
</PageLayout>
